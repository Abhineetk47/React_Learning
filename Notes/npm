=> NPM is basically a manager for all the packages of javascript.
=> To create the package.json file inside our project we can use the command "npm init".
=> Package.json is the configuration for the npm in react project.Now we can install various packages/dependencies inside our project.
Dependencies can be of 2 types which we can install. Dev dependecies are installed and used only at the time of development while the normal dependencies can be used in the time of the production as well. For installing a dependencies for the development we use the command "npm install -D package-name".
=> ~version “Approximately equivalent to version”, will update you to all future patch versions, without incrementing the minor version. ~1.2.3 will use releases from 1.2.3 to <1.3.0.

=> ^version “Compatible with version”, will update you to all future minor/patch versions, without incrementing the major version. ^1.2.3 will use releases from 1.2.3 to <2.0.0.

=>What is the difference of package.json and package.lock.json? 
package.lock.json keeps the track of the exact version of the app that is installed while the package.json can have the cariot^ or tilde~ in it.
=>What is known as the transitive dependencies? 
when we install a single package/dependencies in our project then the node modules has that required package/dependencies installed as well as many other package/dependencies along with it. This happens bcz of transitive dependencies which means suppose we are installing a package named "parcel" then that package can have other packages dependencies which will also get installed along with "parcel" package and this is called transitive dependencies.
=> The most important package in our project is bundler. Examples of bundler are Webpack, "Parcel", Browerserify, Fusebox etc. "create-react-app" command uses webpack and babbles behind the scenes. what is basically job of a bundler ? bundler basically bundles your app, it packages your app properly so that it can shipped to production .
=>Parcel uses babel also.
=>Every folder inside the node modules is itself a package and it has its own package.json file inside it. So node modules is a collection of dependencies or better we can say node modules is a dependecy tree.
=>We dont keep node modules files onto out git hub repo bcz package.json files contains all the dependecies list and package.lock.json contains all the dependecy tree, so we can regenerate the node modules using package.json file.
=> when we use npm command inside the project that means we are installing a library ex `npm i parcel`, while we use the npx command for executing a certain package ex `npx parcel index.html` this command will execute the parcel package for us.
=> we can use react inside our project using CDN(content delivery network) links  but preferred way to use react in our project is using npm. React is at last a javascript library & npm manages all the javascript libraries. so install react library using `npm i react`

=>What are the parcels functions?
1)parcel creates a local server for the projects and hosts the app on it.
2) parcel does the development build
3) Parcel adds the functionality of HOT Module Replacement (HMR) inside the react project.
4) Parcel implements the HMR using the file watching algorithm and this algorithm is written in c++.
5) Parcel is giving faster development experience bcz it is caching files in .parcel-cache file.
6) Parcel does image optimisation.
7) Parcel does consistence hashing to keep track of every change.
8) parcel does code splitting in the production.
9) Parcel does differential bundling to give support to older browsers and different versions of browser.
10) Parcel gives you the functionality to host your app on https if it is getting hosted on http.
11) Parcel does tree shaking -- Removing the unused code from the files.
=> We can create the build of the project in the production using the parcel `npx parcel build index.html`. and the build will be stored inside the `dist` folder. Similarly in the development the build is created using command `npx parcel index.html` and it will be stored inside the `dist` folder only.

=>To include the must support of your web app into the different browsers. you can include the bowsers list attribute in package.json file like this "browserslist":["last 2 versions "]

=>Instead of writing all the commands in the terminal to run,build,host projects what we can do is to write the scripts attribute inside the package.json like this `"scripts": {
    "start": "rm -rf .parcel-cache && parcel index.html",
    "build": "rm -rf .parcel-cache && parcel build index.html"
  }` and then run `npm run start(or script name)`.
  